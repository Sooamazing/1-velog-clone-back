# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      spring.datasource.username: ${{secrets.DB_USER}}
      spring.datasource.password: ${{secrets.DB_PASSWORD}}

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      #
      #      - name: Shutdown Ubuntu MySQL (SUDO)
      #        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
      #
      #      - uses: mirromutth/mysql-action@v1.1
      #        with:
      #          host port: 3306
      #          container port: 3306
      #          mysql database: 'velog_clone'
      #          mysql root password: ${{ secrets.DB_PASSWORD }}

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  test:

    runs-on: ubuntu-latest

    # 참고: https://ttl-blog.tistory.com/1350
    # Report 결과 쓰기 위해 필요
    # 참고: https://github.com/mikepenz/action-junit-report/issues/23
    permissions:
      contents: read
      checks: write
      id-token: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - name: JDK 21 세팅
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: gradlew 실행 권한 설정
        run: chmod +x gradlew

      - name: 테스트 진행
        run: ./gradlew --info test

      - name: 테스트 결과 Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()  # 테스트가 실패해도 Report를 보기 위해 `always`로 설정
        with:
          files: 'build/test-results/**/*.xml'

      - name: 테스트 Comment - clone repo
        uses: mikepenz/action-junit-report@v5
        if: ${{ always() &&  (github.event.pull_request.head.repo.full_name == github.repository) }}
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Write out Unit Test report annotation for forked repo
        if: ${{ failure() &&  (github.event.pull_request.head.repo.full_name != github.repository) }}
        uses: mikepenz/action-junit-report@v5
        with:
          annotate_only: true # forked repo cannot write to checks so just do annotations